#############################################################################################################################
## Este archivo Vagrantfile está siendo utilizado para configurar y crear múltiples máquinas virtuales utilizando Vagrant. ##
#############################################################################################################################

# Se definen las boxes que se utilizarán para crear las VMs. La caja Ubu  utiliza la imagen base ubuntu/bionic64.
Ubu = 'ubuntu/bionic64' 

# Se define la dirección IP del nodo master.
MASTER = '192.168.1.209'

# Lista nodos con las características de cada máquina virtual que se creará: hostname, tipo, dirección IP, memoria asignada y dirección IP del nodo master.
NODES = [
  { hostname: 'm', type: "master", ip: MASTER, mem: 1000, m: MASTER },
  { hostname: 'w1', type: "worker", ip: '192.168.1.201', mem: 1000, m: MASTER },
  { hostname: 'w2', type: "worker", ip: '192.168.1.202', mem: 1000, m: MASTER },
  { hostname: 'w3', type: "worker", ip: '192.168.1.203', mem: 1000, m: MASTER },
]

# Configuración de las VMs utilizando el bloque Vagrant.configure. Se itera sobre cada VM definida en NODES
Vagrant.configure("2") do |config| 
    # Iteramos sobre cada nodo definido en NODES
    NODES.each do |node|
        
        # Configuración específica para cada nodo
        config.vm.define node[:hostname] do |nodeconfig|
            # Configuración de la box y hostname de la VM
            nodeconfig.vm.box = Ubu
            nodeconfig.vm.hostname = node[:hostname]
            
            # Configuración de la red pública
            nodeconfig.vm.network :public_network,
                    bridge: "wlp0s20f3", # Nombre del bridge de red
                    ip: node[:ip],       # Dirección IP del nodo
                    nic_type: "virtio"   # Tipo de interfaz de red
            
            # Configuración específica del proveedor VirtualBox
            nodeconfig.vm.provider "virtualbox" do |v|
                # Asignación de recursos de la VM
                v.customize ["modifyvm",:id,"--memory",node[:mem],"--cpus","1"] 
                # Tipo de interfaz de red predeterminado
                v.default_nic_type = "virtio" 
            end
                
            # Configuración del tiempo de arranque máximo 
            nodeconfig.vm.boot_timeout = 400
            
            # Provisión de la VM utilizando un script shell
            nodeconfig.vm.provision "shell", 
                # Ruta del script de provisionamiento
                path: 'provision.sh',
                 # Argumentos para el script
                args: [ node[:hostname], node[:ip], node[:m], node[:type] ]
            
            # Si el nodo es de tipo "master", se ejecuta un trigger después de que la VM esté activa
            if node[:type] == "master"
                nodeconfig.trigger.after :up do |trigger|
                    # Se copia el archivo de configuración de k3s en el directorio .kube de mi usuario personal
                    trigger.run = \ 
                        {inline: "sh -c 'cp k3s.yaml /home/guillermobajo/.kube/config'"}
                end
            end
        end
    end
end